import type { Config } from "tailwindcss";

const config = {
  darkMode: ["class"],
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  prefix: "",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
        BadgeBg: "var(--color-BadgeBg)",
        TwoColorIcon: "var(--color-TwoColorIcon)",
        ToastBg: "var(--color-ToastBg)",
        Placeholder: "var(--color-Placeholder)",
        Grid: "var(--color-Grid)",
        TagBg: "var(--color-TagBg)",
        Success: "var(--color-Success)",
        SuccessBg: "var(--color-SuccessBg)",
        Error: "var(--color-Error)",
        ErrorBg: "var(--color-ErrorBg)",
        TextBuy: "var(--color-TextBuy)",
        Buy: "var(--color-Buy)",
        BuyHover: "var(--color-BuyHover)",
        DepthBuyBg: "var(--color-DepthBuyBg)",
        TextSell: "var(--color-TextSell)",
        Sell: "var(--color-Sell)",
        SellHover: "var(--color-SellHover)",
        DepthSellBg: "var(--color-DepthSellBg)",
        TextToast: "var(--color-TextToast)",
        TextLink: "var(--color-TextLink)",
        PrimaryYellow: "var(--color-PrimaryYellow)",
        BtnBg: "var(--color-BtnBg)",
        LiteBg2: "var(--color-LiteBg2)",
        LiteBg1: "var(--color-LiteBg1)",
        IconNormal: "var(--color-IconNormal)",
        TextOnYellow: "var(--color-TextOnYellow)",
        TextOnGray: "var(--color-TextOnGray)",
        RedGreenBgText: "var(--color-RedGreenBgText)",
        PrimaryText: "var(--color-PrimaryText)",
        SecondaryText: "var(--color-SecondaryText)",
        TertiaryText: "var(--color-TertiaryText)",
        DisabledText: "var(--color-DisabledText)",
        DisableBtn: "var(--color-DisableBtn)",
        Line: "var(--color-Line)",
        Vessel: "var(--color-Vessel)",
        CardBg: "var(--color-CardBg)",
        InputLine: "var(--color-InputLine)",
        Input: "var(--color-Input)",
        SecondaryBg: "var(--color-SecondaryBg)",
        BasicBg: "var(--color-BasicBg)",
        gradientPrimary: "var(--color-gradientPrimary)",
        gradientBrand: "var(--color-gradientBrand)",
        selectedBg: "var(--color-selectedBg)",
        badgeBg: "var(--color-badgeBg)",
        popupBg: "var(--color-popupBg)",
        bg7: "var(--color-bg7)",
        bg6: "var(--color-bg6)",
        bg4: "var(--color-bg4)",
        bg3: "var(--color-bg3)",
        bg2: "var(--color-bg2)",
        bg1: "var(--color-bg1)",
        bg: "var(--color-bg)",
        textToast: "var(--color-textToast)",
        textBrand: "var(--color-textBrand)",
        textDisabled: "var(--color-textDisabled)",
        textThird: "var(--color-textThird)",
        textSecondary: "var(--color-textSecondary)",
        textPrimary: "var(--color-textPrimary)",
        textBlack: "var(--color-textBlack)",
        textGray: "var(--color-textGray)",
        textWhite: "var(--color-textWhite)",
        iconNormal: "var(--color-iconNormal)",
        disable: "var(--color-disable)",
        successBg: "var(--color-successBg)",
        success: "var(--color-success)",
        errorBg: "var(--color-errorBg)",
        error: "var(--color-error)",
        primaryHover: "var(--color-primaryHover)",
        primary: "var(--color-primary)",
        outlineHover: "var(--color-outlineHover)",
        depthBuyBg: "var(--color-depthBuyBg)",
        buyHover: "var(--color-buyHover)",
        buy: "var(--color-buy)",
        depthSellBg: "var(--color-depthSellBg)",
        sellHover: "var(--color-sellHover)",
        sell: "var(--color-sell)",
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [require("tailwindcss-animate")],
} satisfies Config;

export default config;
